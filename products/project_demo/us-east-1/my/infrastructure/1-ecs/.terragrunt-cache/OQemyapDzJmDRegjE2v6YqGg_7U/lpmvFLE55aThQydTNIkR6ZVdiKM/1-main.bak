
# ECS Cluster
resource "aws_ecs_cluster" "ecs_cluster" {
  name = "${var.cluster_name}-ecs-cluster"
  capacity_providers = ["FARGATE", "EC2"]
}

# EC2 Instance Role
module "ecs_instance_role" {
  source = "./iam"

  cluster_name = var.cluster_name
}

# ECS EC2 Instance
resource "aws_launch_template" "ecs_worker_template" {
  name_prefix = "ecs-worker-"
  image_id     = var.ec2_ami
  instance_type = var.ec2_instance_type
  key_name     = var.key_name

  iam_instance_profile {
    name = module.ecs_instance_role.iam_instance_profile_name
  }

  security_group_ids = [aws_security_group.ecs_security_group.id]
}

# ECS EC2 Service
resource "aws_ecs_service" "ecs_ec2_service" {
  name            = "${var.cluster_name}-ec2-service"
  cluster         = aws_ecs_cluster.ecs_cluster.id
  task_definition = aws_ecs_task_definition.ec2_task_definition.arn
  desired_count   = 2
  launch_type     = "EC2"
}

# ECS Task Definitions (Fargate and EC2)
module "ecs_task_definitions" {
  source = "./task_definitions"
  cluster_name = var.cluster_name
  container_image = var.container_image
}

# Fargate Service
resource "aws_ecs_service" "ecs_fargate_service" {
  name            = "${var.cluster_name}-fargate-service"
  cluster         = aws_ecs_cluster.ecs_cluster.id
  task_definition = module.ecs_task_definitions.fargate_task_definition_arn
  desired_count   = 2
  launch_type     = "FARGATE"
  network_configuration {
    subnets = var.private_subnets
    security_groups = [aws_security_group.ecs_security_group.id]
  }
}
