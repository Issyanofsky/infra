terraform {
  source = "git::https://github.com/terraform-aws-modules/terraform-aws-alb.git?ref=v9.13.0"
}

locals {
  env_vars    = (read_terragrunt_config(find_in_parent_folders("env.hcl"))).locals
  common_tags = (read_terragrunt_config(find_in_parent_folders("common_tags.hcl"))).locals
  merged_tags = merge(local.env_vars, local.common_tags.common_tags)
  env         = local.env_vars.short_env
  region      = (read_terragrunt_config(find_in_parent_folders("region.hcl"))).locals.aws_region
}

include "root" {
  path = find_in_parent_folders("root.hcl")
}


dependency "vpc" {
  config_path = "../0-vpc" # Path to the VPC Terragrunt configuration
}

dependency "eks" {
  config_path = "../1-eks"  # Path to your EKS configuration
}



inputs = {

  name    = "${local.env_vars.project}-${local.env}-nlb"
  vpc_id  = dependency.vpc.outputs.vpc_id
  subnets = dependency.vpc.outputs.private_subnets
  load_balancer_type = "network" # Specify "network" for NLB
  enable_deletion_protection = false 

  # Security Group ingress rules
  security_group_ingress_rules = {
    http = {
      from_port   = 80
      to_port     = 80
      ip_protocol = "tcp"
      description = "HTTP web traffic"
      cidr_ipv4   = "0.0.0.0/0"
    }
    argocd = {
      from_port   = 65534
      to_port     = 65535
      ip_protocol = "tcp"
      description = "argocd web traffic"
      cidr_ipv4   = "0.0.0.0/0"
    }
  }

  security_group_egress_rules = {
    all_egress = {
      ip_protocol = "-1"
      cidr_ipv4   = "0.0.0.0/0"
    }
  }

  target_groups = {
    argocd = {
      name_prefix = "arcocd"
      protocol    = "TCP"
      port        = 65535
      target_type = "instance"          # You can use instance if you have EC2 instances, or "ip" for IP targets
      vpc_id      = dependency.vpc.outputs.vpc_id
      targets     = dependency.eks.outputs.eks_managed_node_groups_autoscaling_group_names
    }
  }

  listeners = {
    http_listener = {
      port     = 65535
      protocol = "TCP"
      default_action = {
        type = "forward"
#        forward = {
        target_id = "argocd" #"nodes_group-2025012808255061310000000b"  dependency.eks.outputs.eks_managed_node_groups.nodes_group.node_group_arn
#        }
      }
    }
 }



  tags = local.merged_tags
}